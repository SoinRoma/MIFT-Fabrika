<?php

namespace common\models;

use Yii;
use yii\behaviors\TimestampBehavior;
use yii\db\Expression;

/**
 * This is the model class for table "mber2".
 *
 * @property int $id
 * @property string|null $ert1
 * @property string|null $ert2
 * @property string|null $ert3
 * @property string|null $ert4
 * @property string|null $ert5
 * @property string|null $ert6
 * @property string|null $ert7
 * @property string|null $ert8
 * @property string|null $ert9
 * @property string|null $ert10
 * @property string|null $ert11
 * @property string|null $ert12
 * @property string|null $ert13
 * @property string|null $ert14
 * @property string|null $ert15
 * @property string|null $ert16
 * @property string|null $ert17
 * @property string|null $ert18
 * @property string|null $ert19
 * @property string|null $ert20
 * @property string|null $ert21
 * @property string|null $ert22
 * @property string|null $ert23
 * @property string|null $ert24
 * @property string|null $ert25
 * @property string|null $ert26
 * @property string|null $ert27
 * @property string|null $ert28
 * @property string|null $ert29
 * @property string|null $ert30
 * @property string|null $ert31
 * @property string|null $ert32
 * @property string|null $ert33
 * @property string|null $ert34
 * @property string|null $ert35
 * @property string|null $ert36
 * @property string|null $ert37
 * @property string|null $ert38
 * @property string|null $ert39
 * @property string|null $ert40
 * @property string|null $ert41
 * @property string|null $ert42
 * @property string|null $ert43
 * @property string|null $ert44
 * @property string|null $ert45
 * @property string|null $ert46
 * @property string|null $ert47
 * @property string|null $ert48
 * @property string|null $ert49
 * @property string|null $ert50
 */
class Mber2 extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */

    public $file_user; // Добавляем переменную
    public $file_mift; // Добавляем переменную
    public $file_gos; // Добавляем переменную

    public static function tableName()


    {
        return 'mber2';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['file_user','file_mift','file_gos'], 'file','extensions' => ['gif', 'jpg', 'csv', 'doc', 'docx', 'word', 'zip', 'png', 'rar', 'tar', 'pdf', 'xls'],'maxSize' => 2048000,'checkExtensionByMimeType' => false],
            ['ert48', 'safe'],
            [['ert1', 'ert2', 'ert3', 'ert4', 'ert5', 'ert6', 'ert7', 'ert8', 'ert9', 'ert10', 'ert11', 'ert12', 'ert13', 'ert14', 'ert15', 'ert16', 'ert17', 'ert18', 'ert19', 'ert20', 'ert21', 'ert22', 'ert23', 'ert24', 'ert25', 'ert26', 'ert27', 'ert28', 'ert29', 'ert30', 'ert31', 'ert32', 'ert33', 'ert34', 'ert35', 'ert36', 'ert37', 'ert38', 'ert39', 'ert40', 'ert41', 'ert42', 'ert43', 'ert44', 'ert45', 'ert46', 'ert47', 'ert49', 'ert50'], 'safe'],
        ];
    }

    public function behaviors()
    {
        return [
            'timestampBehavior'=>[
                'class' => TimestampBehavior::className(),
                'createdAtAttribute' => 'ert49',
                'updatedAtAttribute' => 'ert50',
                'value' => new Expression('NOW()'),
            ],
        ];
    }

    /**
     * {@inheritdoc}
     */

    public function beforeSave($insert)
    {

        $dfgg = User::find()->where(['id'=>Yii::$app->user->id])->one();

        $this->ert17 = 'От сайта'; //'Источник заявки
        $this->ert19 = 'Новая заявка'; //Статус заявки
        $this->ert47 = Yii::$app->user->id;
        $this->ert18 = $dfgg->username;  //Номер
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'ert1' => 'Имя инициатора проекта',
            'ert2' => 'Название проекта',
            'ert3' => 'Мощность проекта',
            'ert4' => 'Количество рабочих мест',
            'ert5' => 'Стоимость проекта',
            'ert6' => 'Капитал инициатора',
            'ert7' => 'Требуемые инвестиции',
            'ert8' => 'Индустрия проекта',
            'ert9' => 'Наименование производимой продукции / услуг',
            'ert10' => 'Контактная информация инициатора проекта',
            'ert11' => 'Предложение инициатора проекта (готовая земля, здание и т. Д.',
            'ert12' => 'Любая дополнительная информация',
            'ert13' => 'Закреплённый файл от пользователя',
            'ert14' => 'Адрес электронной почты',
            'ert15' => 'Сфера деятельности',
            'ert16' => 'Описание идеи',
            'ert17' => 'Источник заявки',
            'ert18' => 'Номер',
            'ert19' => 'Статус заявки',
            'ert20' => 'Ert20',
            'ert21' => 'Ert21',
            'ert22' => 'Ert22',
            'ert23' => 'Ert23',
            'ert24' => 'Ert24',
            'ert25' => 'Ert25',
            'ert26' => 'Ert26',
            'ert27' => 'Ert27',
            'ert28' => 'Ert28',
            'ert29' => 'Ert29',
            'ert30' => 'Ert30',
            'ert31' => 'Ert31',
            'ert32' => 'Ert32',
            'ert33' => 'Ert33',
            'ert34' => 'Ert34',
            'ert35' => 'Ert35',
            'ert36' => 'Ert36',
            'ert37' => 'Ert37',
            'ert38' => 'Ert38',
            'ert39' => 'Ert39',
            'ert40' => 'Ert40',
            'ert41' => 'Ert41',
            'ert42' => 'Ert42',
            'ert43' => 'Ert43',
            'ert44' => 'Ert44',
            'ert45' => 'Ert45',
            'ert46' => 'Ert46',
            'ert47' => 'user_id',
            'ert48' => 'Ответственные госструктуры',
            'ert49' => 'Время принятия заявки',
            'ert50' => 'Последние изменения данных',
        ];
    }



}
